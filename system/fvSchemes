/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2312                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
    // default         Gauss linear;
    default         cellLimited Gauss linear 1;
    grad(U)         cellLimited Gauss linear 1;
    grad(nuTilda)   cellLimited Gauss linear 1;
    limitedGrad     cellLimited Gauss linear 1;

    gradUATC        cellLimited Gauss linear 1;
    gradUaATC        cellLimited Gauss linear 1;
    gradUConv        cellLimited Gauss linear 1;
    gradUaConv       cellLimited Gauss linear 1;

    gradDConv        cellLimited Gauss linear 1;
    gradDaConv       cellLimited Gauss linear 1;
    
    gradKaConv       cellLimited Gauss linear 1;
    gradWaConv       cellLimited Gauss linear 1;
    

}

divSchemes
{
    default         Gauss linear;

    div(phi,U)      bounded Gauss linearUpwindV grad(U);
    div(phi,k)      Gauss linearUpwind limitedGrad;
    div(phi,omega)  Gauss linearUpwind limitedGrad;

    div(-phi,Ua)       bounded Gauss linearUpwind gradUaConv;
    div(-phi,ka)       bounded Gauss linearUpwind gradKaConv;
    div(-phi,wa)       bounded Gauss linearUpwind gradWaConv;

    div(-phiMean,Ua)        bounded Gauss upwind;
    div(-phiMean,ka)        bounded Gauss upwind;
    div(-phiMean,wa)        bounded Gauss upwind;

    div(-yPhi,da)              Gauss linearUpwind gradDaConv;
    div(yPhi,yWall)            Gauss linearUpwind gradDConv;

    div(phi,nuTilda)        bounded Gauss upwind;
    div(-phiMean,nuaTilda)  bounded Gauss upwind;

}

laplacianSchemes
{
    // default         Gauss linear corrected;
    default         Gauss linear limited 0.333;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    // default         corrected;
    default         limited 0.333;
}

wallDist
{
    // method          meshWave;

    method advectionDiffusion;
    advectionDiffusionCoeffs
    {
        method    meshWave;
        tolerance 1.e-5;
        maxIter   1000;
        epsilon   0.1;
    }
}


// ************************************************************************* //
